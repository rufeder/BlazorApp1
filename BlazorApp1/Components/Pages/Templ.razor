@rendermode InteractiveServer
<h3>@pagename</h3>

@if (table)
{
    <div class="card">
        <div class="card-header">
            <h3>Shopping List</h3>
        </div>

        <form>
            <div class="card-body">
                <div class="row">
                    <div class="col form-group">
                        <input class="form-control" placeholder="Productname" @bind="productinput" />
                    </div>
                </div>

                <div class="row">
                    <div class="col form-group">
                        <input class="form-control" placeholder="Price" @bind="pricetag" />
                    </div>
                </div>
            </div>

            <div class="card-footer">
                
            </div>
            
        </form>
        <button style="vertical-align:left; width:10%" class="btn btn-primary btn hover" @onclick="AddProduct">Add Product</button>
    </div>

    <div style="margin-top:50px;">
        <table class="table table-striped table-hover table-dark table-bordered" style="width:30%; vertical-align: middle; float:left;">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th style="width:10px;"></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>

                @foreach (var prod in productlist)
                {
                    <tr>
                        <td>@prod.productname</td>
                        <td>@prod.price</td>
                        <td><button class="btn btn-primary btn-sm btn hover" @onclick="() => AddtoCart(prod.Id, prod.productname, prod.price)">Buy</button></td>
                    </tr>
                }

                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>

        <table style="width:10%; vertical-align: middle; float:left;">
            <thead>
                <tr>
                    <th></th>
                </tr>
            </thead>
        </table>

        <table class="table table-striped table-hover table-dark table-bordered" style="width:30%; vertical-align: middle; float:left;">
            <thead>
                <tr>
                    <th>Shopping cart</th>
                    <th>Amount</th>
                    <th>Price</th>
                    <th style="width:10px;"></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>

                @if (cartlist.Count > 0)
                {
                    @foreach (var prod in cartlist)
                    {
                        <tr>
                            <td>@prod.productname</td>
                            <td>@prod.amount</td>
                            <td>@prod.totalprice</td>
                            <td><button class="btn btn-danger btn-sm btn hover" @onclick="() => RemovefromCart(prod.Id)">X</button></td>
                        </tr>
                    }
                }

                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>

                <tr>
                    <td></td>
                    <td>Total Price:</td>
                    <td>@totalprize</td>
                    <td></td>
                </tr>

                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>
}

@code {
    [Parameter]
    public string? pagename { get; set; }
    [Parameter]
    public bool forms { get; set; } = false;
    [Parameter]
    public bool table { get; set; } = false;

    public string? productinput;

    public string? pricetag;

    public double priceinput;

    public int id=0;

    public double totalprize;

    List<Product> productlist = new();

    List<Product> cartlist = new();


    protected override void OnInitialized()
    {
        productlist.Add(new Product { productname = "Apfel", price = 0.89 , Id = 0 });
        productlist.Add(new Product { productname = "Birne", price = 1.09 , Id = 1 });
        productlist.Add(new Product { productname = "Erdnussbutter", price = 1.89 , Id = 2 });
        id=3;
    }


    public void AddProduct()
    {
        priceinput = double.Parse(pricetag, System.Globalization.CultureInfo.InvariantCulture);
        productlist.Add(new Product { productname = productinput, price = priceinput, amount = 1, Id = id});
        productinput = string.Empty;
        pricetag = string.Empty;
        priceinput = 0;
        id++;
    }

    public void AddtoCart(int pid, string pname, double pprize)
    {
        int temp = cartlist.FindIndex(it => it.Id == pid);
        if (temp == -1)
        {
            cartlist.Add(new Product { productname = pname, price = pprize, amount = 1, Id = pid });
            cartlist[cartlist.Count() - 1].totalprice = Math.Round(cartlist[cartlist.Count() - 1].amount * cartlist[cartlist.Count() - 1].price, 2);
        } else
        {
            cartlist[temp].amount++;
            cartlist[temp].totalprice = Math.Round(cartlist[temp].amount * cartlist[temp].price, 2);
        }
        CalcTotalPrize();
    }

    public void RemovefromCart(int pid)
    {
        int index = cartlist.FindIndex(it => it.Id == pid);
        if(cartlist[index].amount == 1)
        {
            cartlist.RemoveAt(index);
        } else
        {
            cartlist[index].totalprice = Math.Round(cartlist[index].totalprice - cartlist[index].price, 2);
            cartlist[index].amount--;
        }
        CalcTotalPrize();
    }

    public void CalcTotalPrize()
    {
        totalprize = 0;
        foreach (var prod in cartlist)
        {
            totalprize += prod.totalprice;
        }
        totalprize = Math.Round(totalprize, 2);
    }

}
